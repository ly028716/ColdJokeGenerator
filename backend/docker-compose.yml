version: '3.8'

services:
  # 主应用服务
  app:
    build: .
    container_name: ai-joke-generator
    ports:
      - "8000:8000"
    environment:
      - PROJECT_NAME=AI冷笑话生成器
      - VERSION=1.0.0
      - DEBUG=False
      - ENVIRONMENT=production
      - HOST=0.0.0.0
      - PORT=8000
      - DATABASE_URL=postgresql://jokes_user:jokes_pass@db:5432/jokes_db
      - REDIS_URL=redis://redis:6379/0
      - QWEN_API_KEY=${QWEN_API_KEY}
      - SECRET_KEY=${SECRET_KEY}
      - LOG_LEVEL=INFO
      - ENABLE_CACHE=True
      - ENABLE_METRICS=True
    depends_on:
      - db
      - redis
    volumes:
      - ./logs:/app/logs
      - ./data:/app/data
    restart: unless-stopped
    networks:
      - app-network

  # PostgreSQL数据库
  db:
    image: postgres:13-alpine
    container_name: ai-joke-db
    environment:
      - POSTGRES_DB=jokes_db
      - POSTGRES_USER=jokes_user
      - POSTGRES_PASSWORD=jokes_pass
      - POSTGRES_INITDB_ARGS=--encoding=UTF-8 --lc-collate=C --lc-ctype=C
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./init-db.sql:/docker-entrypoint-initdb.d/init-db.sql
    ports:
      - "5432:5432"
    restart: unless-stopped
    networks:
      - app-network

  # Redis缓存
  redis:
    image: redis:6-alpine
    container_name: ai-joke-redis
    command: redis-server --appendonly yes --requirepass redis_pass
    volumes:
      - redis_data:/data
    ports:
      - "6379:6379"
    restart: unless-stopped
    networks:
      - app-network

  # Nginx反向代理
  nginx:
    image: nginx:alpine
    container_name: ai-joke-nginx
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf
      - ./ssl:/etc/nginx/ssl
    depends_on:
      - app
    restart: unless-stopped
    networks:
      - app-network

  # 监控服务 (可选)
  prometheus:
    image: prom/prometheus:latest
    container_name: ai-joke-prometheus
    ports:
      - "9090:9090"
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml
      - prometheus_data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'
    restart: unless-stopped
    networks:
      - app-network

volumes:
  postgres_data:
  redis_data:
  prometheus_data:

networks:
  app-network:
    driver: bridge